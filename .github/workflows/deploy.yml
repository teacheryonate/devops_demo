# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Deploy to ubunto server

on:
  push:
    branches: [ "main" ]
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 코드 체크아웃 actions/setup-java@v4는 jdk21버전 이상일 때만 사용함
      - name: Checkout repository
        uses: actions/checkout@v2
      # JDK17설정  
      - name: Setup JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: "17"
      # gradle 권한 설정
      - name: Set gradle permitions
        run: 
          chmod +x ./gradlew
      # gradle 빌드
      - name: Build with gradle
        run: ./gradle build


      # ssh key permition 설정
      - name: Set SSH key permissions
        run: |
          mkdir -p ~/.ssh
          echo "${{secrets.SERVER_SSH_KEY}}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      #ssh key 추가
      - name: Add SSH Key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{secrets.SERVER_SSH_KEY}}

      - name: Add known_hosts
        run: |
          ssh-keyscan -t ed25519 54.180.94.11 >> ~/.ssh/known_hosts

      # Deploy to server
      - name: Deploy to server
        run: scp build/libs/*.jar ubuntu#54.180.94.11:~/app

      # Run SSh command
      - name: Run ssh commands
        run: |
          ssh -i ~/.ssh/id_rsa ubuntu@54.180.94.11 << 'EOF'
            pkill -f 'java -jar' || true
            nohup java -jar ~/app/devops_demo-0.0.1-SNAPSHOT.jar > log.txt 2>&1 &
          EOF
          
  #   - uses: actions/checkout@v4
  #   - name: Set up JDK 17
  #     uses: actions/setup-java@v4
  #     with:
  #       java-version: '17'
  #       distribution: 'temurin'

  #   # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
  #   # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
  #   - name: Setup Gradle
  #     uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

  #   - name: Build with Gradle Wrapper
  #     run: ./gradlew build

  #   # NOTE: The Gradle Wrapper is the default and recommended way to run Gradle (https://docs.gradle.org/current/userguide/gradle_wrapper.html).
  #   # If your project does not have the Gradle Wrapper configured, you can use the following configuration to run Gradle with a specified version.
  #   #
  #   # - name: Setup Gradle
  #   #   uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
  #   #   with:
  #   #     gradle-version: '8.9'
  #   #
  #   # - name: Build with Gradle 8.9
  #   #   run: gradle build

  # dependency-submission:

  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: write

  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Set up JDK 17
  #     uses: actions/setup-java@v4
  #     with:
  #       java-version: '17'
  #       distribution: 'temurin'

  #   # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
  #   # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
  #   - name: Generate and submit dependency graph
  #     uses: gradle/actions/dependency-submission@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
